{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cryptocurrency Tracker\\\\react-crypto-tracker\\\\src\\\\components\\\\CoinsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Container, createTheme, TableCell, LinearProgress, ThemeProvider, Typography, TextField, TableBody, TableRow, TableHead, TableContainer, Table, Paper } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../config/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport default function CoinsTable() {\n  _s();\n\n  var _handleSearch;\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#16171a\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#131111\"\n      },\n      fontFamily: \"Montserrat\"\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n        color: \"gold\"\n      }\n    }\n  });\n  const classes = useStyles();\n  const history = useHistory();\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    console.log(data);\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          margin: 18,\n          fontFamily: \"Montserrat\"\n        },\n        children: \"Cryptocurrency Prices by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search For a Crypto Currency..\",\n        variant: \"outlined\",\n        style: {\n          marginBottom: 20,\n          width: \"100%\"\n        },\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Montserrat\"\n                },\n                align: head === \"Coin\" ? \"\" : \"right\",\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10).map(row => {\n              const profit = row.price_change_percentage_24h > 0;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => history.push(`/coins/${row.id}`),\n                className: classes.row,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  style: {\n                    display: \"flex\",\n                    gap: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row.name,\n                    height: \"50\",\n                    style: {\n                      marginBottom: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"column\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        textTransform: \"uppercase\",\n                        fontSize: 22\n                      },\n                      children: row.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"darkgrey\"\n                      },\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [symbol, \" \", numberWithCommas(row.current_price.toFixed(2))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                    fontWeight: 500\n                  },\n                  children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [symbol, \" \", numberWithCommas(row.market_cap.toString().slice(0, -6)), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: (((_handleSearch = handleSearch()) === null || _handleSearch === void 0 ? void 0 : _handleSearch.length) / 10).toFixed(0),\n        style: {\n          padding: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        classes: {\n          ul: classes.pagination\n        },\n        onChange: (_, value) => {\n          setPage(value);\n          window.scroll(0, 450);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinsTable, \"NefoAl3INV6fH+96t8UHKcBG8w8=\", true, function () {\n  return [useHistory];\n});\n\n_c = CoinsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsTable\");","map":{"version":3,"sources":["D:/Cryptocurrency Tracker/react-crypto-tracker/src/components/CoinsTable.js"],"names":["React","useEffect","useState","makeStyles","Pagination","Container","createTheme","TableCell","LinearProgress","ThemeProvider","Typography","TextField","TableBody","TableRow","TableHead","TableContainer","Table","Paper","axios","CoinList","useHistory","CryptoState","numberWithCommas","x","toString","replace","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","currency","symbol","useStyles","row","backgroundColor","cursor","fontFamily","pagination","color","classes","history","darkTheme","palette","primary","main","type","fetchCoins","data","get","console","log","handleSearch","filter","coin","name","toLowerCase","includes","textAlign","margin","marginBottom","width","e","target","value","map","head","fontWeight","slice","profit","price_change_percentage_24h","push","id","display","gap","image","flexDirection","textTransform","fontSize","current_price","toFixed","market_cap","length","padding","justifyContent","ul","_","window","scroll"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n  Container,\r\n  createTheme,\r\n  TableCell,\r\n  LinearProgress,\r\n  ThemeProvider,\r\n  Typography,\r\n  TextField,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default function CoinsTable() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const useStyles = makeStyles({\r\n    row: {\r\n      backgroundColor: \"#16171a\",\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#131111\",\r\n      },\r\n      fontFamily: \"Montserrat\",\r\n    },\r\n    pagination: {\r\n      \"& .MuiPaginationItem-root\": {\r\n        color: \"gold\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  const fetchCoins = async () => {\r\n    setLoading(true);\r\n    const { data } = await axios.get(CoinList(currency));\r\n    console.log(data);\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoins();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currency]);\r\n\r\n  const handleSearch = () => {\r\n    return coins.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.symbol.toLowerCase().includes(search)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\r\n        >\r\n          Cryptocurrency Prices by Market Cap\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search For a Crypto Currency..\"\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20, width: \"100%\" }}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <TableContainer component={Paper}>\r\n          {loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n          ) : (\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                <TableRow>\r\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontWeight: \"700\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                      key={head}\r\n                      align={head === \"Coin\" ? \"\" : \"right\"}\r\n                    >\r\n                      {head}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {handleSearch()\r\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                  .map((row) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={() => history.push(`/coins/${row.id}`)}\r\n                        className={classes.row}\r\n                        key={row.name}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: 15,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22,\r\n                              }}\r\n                            >\r\n                              {row.symbol}\r\n                            </span>\r\n                            <span style={{ color: \"darkgrey\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(row.current_price.toFixed(2))}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {profit && \"+\"}\r\n                          {row.price_change_percentage_24h.toFixed(2)}%\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6)\r\n                          )}\r\n                          M\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n\r\n        {/* Comes from @material-ui/lab */}\r\n        <Pagination\r\n          count={(handleSearch()?.length / 10).toFixed(0)}\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          classes={{ ul: classes.pagination }}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n            window.scroll(0, 450);\r\n          }}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}